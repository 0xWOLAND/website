---
import { getCollection } from 'astro:content';
import '../styles/global.css';

const posts = await getCollection('blog', ({ data }) => !data.draft)
  .then(posts => posts.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()));

// Get all unique tags
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))];
---
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width" />
  <title>bhargav's blog</title>
  <script>
    // Theme init
    const theme = localStorage.getItem('theme') || 'light';
    document.documentElement.className = theme;
  </script>
</head>
<body>
  <button class="theme-toggle">☾/☀</button>
  <h1>bhargav's blog</h1>
  
  {allTags.length > 0 && (
    <p>
      <a href="https://github.com/0xWOLAND" target="_blank">github</a> • 
      filter: 
      <span class="tag-filter active" data-tag="all">all</span>
      {allTags.map(tag => (
        <span class="tag-filter" data-tag={tag}>#{tag}</span>
      ))}
    </p>
  )}
  
  <hr />
  
  <div id="posts">
    {posts.map(post => (
      <article data-tags={JSON.stringify(post.data.tags || [])}>
        <h2><a href={`/blog/${post.slug}/`}>{post.data.title}</a></h2>
        <p class="post-meta">
          {new Date(post.data.date).toLocaleDateString('en-US', {
            year: 'numeric', month: 'long', day: 'numeric'
          })}
          {post.data.tags && ' • ' + post.data.tags.map(tag => `#${tag}`).join(' ')}
        </p>
        {post.data.description && <p>{post.data.description}</p>}
      </article>
    ))}
  </div>

  <script>
    // Theme toggle
    document.querySelector('.theme-toggle').addEventListener('click', () => {
      const current = document.documentElement.className;
      const next = current === 'dark' ? 'light' : 'dark';
      document.documentElement.className = next;
      localStorage.setItem('theme', next);
    });

    // Tag filtering
    const filters = document.querySelectorAll('.tag-filter');
    const posts = document.querySelectorAll('#posts article');
    
    filters.forEach(filter => {
      filter.addEventListener('click', () => {
        // Update active state
        filters.forEach(f => f.classList.remove('active'));
        filter.classList.add('active');
        
        const tag = filter.dataset.tag;
        
        posts.forEach(post => {
          if (tag === 'all') {
            post.style.display = 'block';
          } else {
            const postTags = JSON.parse(post.dataset.tags);
            post.style.display = postTags.includes(tag) ? 'block' : 'none';
          }
        });
      });
    });
  </script>
</body>
</html>